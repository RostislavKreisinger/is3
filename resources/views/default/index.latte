<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Dashboard</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">

        <form action="">
            <input name="id" type="text">
            <input type="submit">
        </form>
    {$hashId}
    </div>
    <!-- /.col-lg-12 -->
</div>


<!-- /.row -->
<div class="row">
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-yellow panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Automattest import
                ({count($automattestProjects)})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%" class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                            <tr>
                                <th>id</th>
                                <th>name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr n:foreach="$automattestProjects as $project">
                                <td><a href="{action 'Project\DetailController', ['project_id' => $project->getId()]}">{$project->getId()}</a></td>
                                <td>{$project->getName()}
                                    [
                                    <a n:foreach="$project->getResourceModels() as $resource" href="{action 'Project\Resource\DetailController', ['project_id' => $project->getId(), 'resource_id' => $resource->id] }">
                                        {$resource->name}<span class="link-delimiter" n:if="!$iterator->last"> | </span>
                                    </a>
                                    ]
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-primary panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Daily import
                ({count($dailyProjects)})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%" class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                            <tr>
                                <th>id</th>
                                <th>name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr n:foreach="$dailyProjects as $project">
                                <td><a href="{action 'Project\DetailController', ['project_id' => $project->getId()]}">{$project->getId()}</a></td>
                                <td>{$project->getName()}
                                    [
                                    <a n:foreach="$project->getResourceModels() as $resource" href="{action 'Project\Resource\DetailController', ['project_id' => $project->getId(), 'resource_id' => $resource->id] }">
                                        {$resource->name} <span n:if="!$iterator->last">, </span>
                                    </a>
                                    ]
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-green panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                History import
                ({count($historyProjects)})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%" class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                            <tr>
                                <th>id</th>
                                <th>name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr n:foreach="$historyProjects as $project">
                                <td><a href="{action 'Project\DetailController', ['project_id' => $project->getId()]}">{$project->getId()}</a></td>
                                <td>{$project->getName()}
                                    [
                                    <a n:foreach="$project->getResourceModels() as $resource" href="{action 'Project\Resource\DetailController', ['project_id' => $project->getId(), 'resource_id' => $resource->id] }">
                                        {$resource->name} <span n:if="!$iterator->last">, </span>
                                    </a>
                                    ]
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>


<div class="row">
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-danger panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Autoreport
                ({count($autoreportProjects)})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%" class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                            <tr>
                                <th>id</th>
                                <th>name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr n:foreach="$autoreportProjects as $project">
                                <td><a href="{action 'Project\DetailController', ['project_id' => $project->id]}">{$project->id}</a></td>
                                <td>{$project->name} </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-warning panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                <a href="{action 'Currency\IndexController'}">Currency</a>
                ({count($currencies)})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%" class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                            <tr>
                                <th>id</th>
                                <th>name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr n:foreach="$currencies as $currency">
                                <td><a href="{action 'Currency\IndexController'}">{n $currency->id}</a></td>
                                <td>{n $currency->ISO3} </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6">

    <div class="panel panel-warning panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                <a href="{action 'StornoOrderStatus\IndexController'}">Storno order statuses</a>
                ({count($stornoOrderStatuses)})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%" class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                            <tr>
                                <th>id</th>
                                <th>name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr n:foreach="$stornoOrderStatuses as $stornoOrderStatus">
                                <td><a href="{action 'StornoOrderStatus\IndexController'}">{n $stornoOrderStatus->id}</a></td>
                                <td>{n $stornoOrderStatus->name} </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>

</div>

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h1 style="display: inline-block">ImportFlow Statuses</h1>
            <h2 id="currentDateIFStatuses" style="display: inline-block; color: #999; margin-left: 30px"></h2>
        </div>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Jobs times in queues
            </div>
            <div class="panel-body">
                <div id="chart-import-flow-queues-times"></div>
                <script>

                    window.chartImportFlowQueuesTimesUrl = "{action 'Api\ImportFlow\Graphs\QueuesTimesStatusController'}";
                    // window.chartImportFlowQueuesUrl = "http://localhost/import-support-v3.monkeydata.com/public/api/import-flow/graphs/queues-status";
                </script>
                <script>
                    $(function() {
                        $("#chart-import-flow-queues-times").dxChart({
                            dataSource: [],
                            valueAxis: {
                                label: {
                                    customizeText: function(arg){
                                        return mdFormat.formatSecondToTime(arg.value);
                                    }
                                }
                            },
                            argumentAxis: {
                                label: {
                                    overlappingBehavior: {
                                        mode: 'stagger',
                                        staggeringSpacing: 5,
                                        rotationAngle: 90
                                    }
                                }
                            },
                            commonSeriesSettings: {
                                argumentField: "category",
                                type: "bar",
                                cornerRadius: 2,
                                label: {
                                    visible: false,
                                    backgroundColor: 'transparent',
                                    font: {
                                        weight: 700,
                                        size: 14
                                    }
                                }
                            },

                            series: [
                                {
                                    name: 'MIN',
                                    valueField: "min",
                                    color: '#12a010',
                                    label: {
                                        font: {
                                            color: '#12a010',
                                        }
                                    }
                                },
                                {
                                    name: 'AVG',
                                    valueField: "avg",
                                    color: '#FF8C00',
                                    label: {
                                        font: {
                                            color: '#FF8C00',
                                        }
                                    }
                                },
                                {
                                    name: 'MAX',
                                    valueField: "max",
                                    color: '#FF0000',
                                    label: {
                                        font: {
                                            color: '#FF0000',
                                        }
                                    }
                                },
                            ],
//                            tooltip: {
//                                enabled: true,
//                                customizeTooltip: function(point){
//
//                                    return { html: mdFormat.formatSecondToTime(point.value) };
//                                }
//                            },

                            tooltip: {
                                enabled: true,
                                shared: true,
                                customizeTooltip: function(point){
                                    var date = mdDate.clone(point.argument);
                                    var pointsTable = '<table>';
                                    $.each(point.points, function(index, current){
                                        var pointHtml = "<tr style='color: " + current.point.getColor() + "; font-weight: bold;'><td>"+current.seriesName+"</td><td style='padding-left: 10px;'>"+mdFormat.formatSecondToTime(current.value)+"</td></tr>";
                                        pointsTable += pointHtml;
                                    });
                                    pointsTable += '</table>';
                                    return { html: '<div>' + date.getFormatDate('y-m-d h:i:s') + '</div><div>' + pointsTable + '</div>' };
                                }
                            },
                        });

                        function reloadChartImportFlowQueuesTimes(){
                            var ajax = new MDAjax({
                                url: window.chartImportFlowQueuesTimesUrl,
                                data: {},
                                timeout: 30000,
                                beforeSend: function (xhr) {},
                                success: function (data) {
                                    var dxInstace = $("#chart-import-flow-queues-times").dxChart("instance");
                                    dxInstace.option('dataSource', data);

                                    setTimeout(reloadChartImportFlowQueuesTimes, 10000);
                                },
                                error: function (xhr, status, error) {
                                    console.log("fail");
                                },
                                statusCode: {},
                            });
                        }
                        reloadChartImportFlowQueuesTimes();


                    });
                </script>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Jobs in queues
            </div>
            <div class="panel-body">
                <div id="chart-import-flow-queues"></div>
                <script>

                    window.chartImportFlowQueuesUrl = "{action 'Api\ImportFlow\Graphs\QueuesStatusController'}";
                    // window.chartImportFlowQueuesUrl = "http://localhost/import-support-v3.monkeydata.com/public/api/import-flow/graphs/queues-status";
                </script>
                <script>
                    $(function() {
                        $("#chart-import-flow-queues").dxChart({
                            dataSource: [],
                            commonSeriesSettings: {
                                argumentField: "category",
                                type: "bar",
                                cornerRadius: 2,
                                label: {
                                    visible: true,
                                    backgroundColor: 'transparent',
                                    font: {
                                        weight: 700,
                                        size: 14
                                    }
                                }
                            },
                            series: [
                                {
                                    name: 'ACTIVE',
                                    valueField: "active_1",
                                    color: '#12a010',
                                    label: {
                                        font: {
                                            color: '#12a010',
                                        }
                                    }
                                },
                                {
                                    name: 'PLANNED',
                                    valueField: "active_2",
                                    color: '#0083ff',
                                    label: {
                                        font: {
                                            color: '#0083ff',
                                        }
                                    }
                                },
                                {
                                    name: 'RUNNING',
                                    valueField: "active_5",
                                    color: '#FF8C00',
                                    label: {
                                        font: {
                                            color: '#FF8C00',
                                        }
                                    }
                                },
                            ]
                        });

                        function reloadChartImportFlowQueues(){
                            var ajax = new MDAjax({
                                url: window.chartImportFlowQueuesUrl,
                                data: {},
                                timeout: 30000,
                                beforeSend: function (xhr) {},
                                success: function (data) {
                                    var dxInstace = $("#chart-import-flow-queues").dxChart("instance");
                                    dxInstace.option('dataSource', data);

                                    setTimeout(reloadChartImportFlowQueues, 10000);
                                },
                                error: function (xhr, status, error) {
                                    console.log("fail");
                                },
                                statusCode: {},
                            });
                        }
                        reloadChartImportFlowQueues();


                    });
                </script>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Jobs queue in time last 10 minutes
            </div>
            <div class="panel-body">
                <div id="chart-import-flow-queues-jobs-in-time"></div>
                <script>
                    window.chartImportFlowQueuesJobsInTimeUrl = "{action 'Api\ImportFlow\Graphs\QueuesJobsInTimeController'}";
                    // window.chartImportFlowQueuesUrl = "http://localhost/import-support-v3.monkeydata.com/public/api/import-flow/graphs/queues-status";
                </script>
                <script>
                    $(function() {
                        var selector =$("#chart-import-flow-queues-jobs-in-time");
                        selector.dxChart({
                            dataSource: [],
                            valueAxis: {
                                min: 0
//                                label: {
//                                    customizeText: function(arg){
//                                        return mdFormat.formatSecondToTime(arg.value);
//                                    }
//                                }
                            },
                            argumentAxis: {
                                argumentType: 'datetime',
                                label: {
                                    overlappingBehavior: {
                                        mode: 'stagger',
                                        staggeringSpacing: 5,
                                        rotationAngle: 90
                                    }
                                }
                            },
                            commonSeriesSettings: {
                                argumentField: "category",
                                type: "spline",
                                point: {
                                    size: 2
                                }
//                                label: {
//                                    visible: false,
//                                    backgroundColor: 'transparent',
//                                    font: {
//                                        weight: 700,
//                                        size: 14
//                                    }
//                                }
                            },

                            series: [
                                {
                                    name: 'jobs count',
                                    valueField: "value",
                                    color: '#0083ff',
                                    label: {
                                        font: {
                                            color: '#0083ff',
                                        }
                                    }
                                }
                            ],
//                            tooltip: {
//                                enabled: true,
//                                customizeTooltip: function(point){
//                                    var date = mdDate.clone(point.argument);
//                                    return { html: '<div>' + date.getFormatDate('y-m-d h:i:s') + '</div><div>' + point.value + '</div>' };
//                                }
//                            },
                            tooltip: {
                                enabled: true,
                                shared: true,
                                customizeTooltip: function(point){
                                    var date = mdDate.clone(point.argument);
                                    var pointsTable = '<table>';
                                    $.each(point.points, function(index, current){
                                        var pointHtml = "<tr style='color: " + current.point.getColor() + "; font-weight: bold;'><td>"+current.seriesName+"</td><td style='padding-left: 10px;'>"+current.value+"</td></tr>";
                                        pointsTable += pointHtml;
                                    });
                                    pointsTable += '</table>';
                                    return { html: '<div>' + date.getFormatDate('y-m-d h:i:s') + '</div><div>' + pointsTable + '</div>' };
                                }
                            },
                        });

                        function reloadChartImportFlowQueuesJobsInTime(){
                            var ajax = new MDAjax({
                                url: window.chartImportFlowQueuesJobsInTimeUrl,
                                data: {},
                                timeout: 30000,
                                beforeSend: function (xhr) {},
                                success: function (data) {
                                    var dxInstace = selector.dxChart("instance");
                                    dxInstace.option('dataSource', data);

                                    setTimeout(reloadChartImportFlowQueuesJobsInTime, 5000);
                                },
                                error: function (xhr, status, error) {
                                    console.log("fail");
                                },
                                statusCode: {},
                            });
                        }
                        reloadChartImportFlowQueuesJobsInTime();


                    });
                </script>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Jobs times in queues
            </div>
            <div class="panel-body">
                <div id="chart-import-flow-queues-jobs-in-time-history"></div>
                <script>
                    window.chartImportFlowQueuesJobsInTimeHistoryUrl = "{action 'Api\ImportFlow\Graphs\QueuesJobsInTimeHistoryController'}";
                    // window.chartImportFlowQueuesUrl = "http://localhost/import-support-v3.monkeydata.com/public/api/import-flow/graphs/queues-status";
                </script>
                <script>
                    $(function() {
                        var selector =$("#chart-import-flow-queues-jobs-in-time-history");
                        selector.dxChart({
                            dataSource: [],
                            valueAxis: {
                                min: 0
//                                label: {
//                                    customizeText: function(arg){
//                                        return mdFormat.formatSecondToTime(arg.value);
//                                    }
//                                }
                            },
                            argumentAxis: {
                                argumentType: 'datetime',
                                label: {
                                    overlappingBehavior: {
                                        mode: 'stagger',
                                        staggeringSpacing: 5,
                                        rotationAngle: 90
                                    }
                                }
                            },
                            commonSeriesSettings: {
                                argumentField: "category",
                                type: "spline",
                                point: {
                                    size: 1
                                },
                                hoverMode: 'allArgumentPoints'
//                                label: {
//                                    visible: false,
//                                    backgroundColor: 'transparent',
//                                    font: {
//                                        weight: 700,
//                                        size: 14
//                                    }
//                                }
                            },

                            series: [
                                {
                                    name: 'MIN',
                                    valueField: "min",
                                    color: '#12a010',
                                    label: {
                                        font: {
                                            color: '#12a010',
                                        }
                                    },
                                    width: 1
                                },
                                {
                                    name: 'AVG',
                                    valueField: "value",
                                    color: '#0083ff',
                                    label: {
                                        font: {
                                            color: '#0083ff',
                                        }
                                    },
                                    width: 3
                                },
                                {
                                    name: 'MAX',
                                    valueField: "max",
                                    color: '#FF8C00',
                                    label: {
                                        font: {
                                            color: '#FF8C00',
                                        }
                                    },
                                    width: 1
                                }

                            ],
                            tooltip: {
                                enabled: true,
                                shared: true,
                                customizeTooltip: function(point){
                                    var date = mdDate.clone(point.argument);
                                    var pointsTable = '<table>';
                                    $.each(point.points, function(index, current){
                                        var pointHtml = "<tr style='color: " + current.point.getColor() + "; font-weight: bold;'><td>"+current.seriesName+"</td><td style='padding-left: 10px;'>"+current.value+"</td></tr>";
                                        pointsTable += pointHtml;
                                    });
                                    pointsTable += '</table>';
                                    return { html: '<div>' + date.getFormatDate('y-m-d h:i:s') + '</div><div>' + pointsTable + '</div>' };
                                }
                            },
                        });

                        function reloadChartImportFlowQueuesJobsInTimeHistory(){
                            var ajax = new MDAjax({
                                url: window.chartImportFlowQueuesJobsInTimeHistoryUrl,
                                data: {},
                                timeout: 30000,
                                beforeSend: function (xhr) {},
                                success: function (data) {
                                    var dxInstace = selector.dxChart("instance");
                                    dxInstace.option('dataSource', data);

                                    setTimeout(reloadChartImportFlowQueuesJobsInTimeHistory, 100000);
                                },
                                error: function (xhr, status, error) {
                                    console.log("fail");
                                },
                                statusCode: {},
                            });
                        }
                        reloadChartImportFlowQueuesJobsInTimeHistory();


                    });
                </script>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-warning panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Import warnings
                ({$importStatuses->count()})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%"
                           class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                        <tr>
                            <th>id</th>
                            <th>name</th>
                            <th>start_at</th>
                            <th>status</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr n:foreach="$importStatuses as $status">
                            <td><a href="{action 'Project\DetailController', ['project_id' => $status->project_id]}">{$status->project_id}</a></td>
                            <td>{$status->name}</td>
                            <td style="width: 115px">{$status->start_date}</td>
                            <td style="width: 50px">{$status->import}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4 col-md-6">
        <div class="panel panel-warning panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Etl warnings
                ({$etlStatuses->count()})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%"
                           class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                        <tr>
                            <th>id</th>
                            <th>name</th>
                            <th>start_at</th>
                            <th>status</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr n:foreach="$etlStatuses as $status">
                            <td><a href="{action 'Project\DetailController', ['project_id' => $status->project_id]}">{$status->project_id}</a></td>
                            <td>{$status->name}</td>
                            <td style="width: 115px">{$status->start_date}</td>
                            <td style="width: 50px">{$status->etl}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4 col-md-6">
        <div class="panel panel-warning panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Calc warnings
                ({$calcStatuses->count()})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%"
                           class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                        <tr>
                            <th>id</th>
                            <th>name</th>
                            <th>start_at</th>
                            <th>status</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr n:foreach="$calcStatuses as $status">
                            <td><a href="{action 'Project\DetailController', ['project_id' => $status->project_id]}">{$status->project_id}</a></td>
                            <td>{$status->name}</td>
                            <td style="width: 115px">{$status->start_date}</td>
                            <td style="width: 50px">{$status->calc}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-lg-4 col-md-6">
        <div class="panel panel-warning panel-error-project-list">
            <div class="panel-heading">
                <i class="fa fa-bell fa-fw"></i>
                Output warnings
                ({$outputStatuses->count()})
            </div>
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table width="100%"
                           class="table table-striped table-bordered table-hover table-projects">
                        <thead hidden="">
                        <tr>
                            <th>id</th>
                            <th>name</th>
                            <th>start_at</th>
                            <th>status</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr n:foreach="$outputStatuses as $status">
                            <td><a href="{action 'Project\DetailController', ['project_id' => $status->project_id]}">{$status->project_id}</a></td>
                            <td>{$status->name}</td>
                            <td style="width: 115px">{$status->start_date}</td>
                            <td style="width: 50px">{$status->output}</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var results = "";

    function getTwoDigitNumber(num) {
        if(num < 10) {
            num = "0" + num;
        }
        return num;
    }

    var date = new Date();
    results = getTwoDigitNumber(date.getMonth()+1) + "-"
            + getTwoDigitNumber(date.getDate()) + " "
            + getTwoDigitNumber(date.getHours()) + ":"
            + getTwoDigitNumber(date.getMinutes()) + ":"
            + getTwoDigitNumber(date.getSeconds());

    $("#currentDateIFStatuses").text(results);
</script>