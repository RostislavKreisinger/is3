<div class="panel">
    <div class="panel-body">
        <form class="form-group form-inline">
            <input class="form-control" type="date" id="af_date_from" title="From">
            <input class="form-control" type="date" id="af_date_to" title="To">
            <span>Active: </span>
            <label for="af_cb_0">
                <input class="form-control" type="checkbox" id="af_cb_0" value="0" name="cb_active"> 0
            </label>
            <label for="af_cb_1">
                <input class="form-control" type="checkbox" id="af_cb_1" value="1" name="cb_active" checked> 1
            </label>
            <label for="af_cb_2">
                <input class="form-control" type="checkbox" id="af_cb_2" value="2" name="cb_active" checked> 2
            </label>
            <label for="af_cb_3">
                <input class="form-control" type="checkbox" id="af_cb_3" value="3" name="cb_active"> 3
            </label>
            <label for="af_cb_5">
                <input class="form-control" type="checkbox" id="af_cb_5" value="5" name="cb_active" checked> 5
            </label>
            <input class="btn btn-primary" id="filter_button" type="submit" value="Filter">
        </form>
        <div id="import-flow-active-flows"></div>
    </div>
    <div class="panel-footer">
        Význam sloupce runtime se mění podle hodnoty active:
        <ul>
            <li>0 - finish_at - start_at</li>
            <li>1 - Aktuální čas - updated_at</li>
            <li>2 - Aktuální čas - updated_at</li>
            <li>3 - Aktuální čas - updated_at</li>
            <li>5 - Aktuální čas - start_at</li>
        </ul>
    </div>
</div>
<script>
    $(function () {
        var now = new Date();
        var dayAgo = new Date();
        var dateFromInput = $('#af_date_from');
        var dateToInput = $('#af_date_to');
        now.setDate(now.getDate() + 1);
        dayAgo.setDate(now.getDate() - 1);
        $(dateFromInput).val(dayAgo.toISOString().split('T')[0]);
        $(dateToInput).val(now.toISOString().split('T')[0]);

        window.flowsGrid = $("#import-flow-active-flows").dxDataGrid({
            columnAutoWidth: true,
            columns: [
                {
                    caption: 'UID',
                    cellTemplate: function (cellElement, cellInfo) {
                        cellElement.html('<a href="' + cellInfo.data.user_url + '">' + cellInfo.value + '</a>');
                    },
                    dataField: 'project.user_id',
                    dataType: 'number',
                    selectedFilterOperation: 'contains'
                },
                {
                    caption: 'PID',
                    cellTemplate: function (cellElement, cellInfo) {
                        cellElement.html('<a href="' + cellInfo.data.project_url + '">' + cellInfo.value + '</a>');
                    },
                    dataField: 'project_id',
                    dataType: 'number',
                    selectedFilterOperation: 'contains'
                },
                {
                    calculateCellValue: function (data) {
                        var resourceName = 'Unknown';

                        if (data.resource_id === 4) {
                            resourceName = data.project && data.project.eshop_type_name ? data.project.eshop_type_name.name : 'Eshop';
                        } else if (data.resource) {
                            resourceName = data.resource.name;
                        }

                        return data.resource_id + ' ' + resourceName;
                    },
                    caption: 'Resource',
                    cellTemplate: function (cellElement, cellInfo) {
                        var resourceName = 'Unknown';

                        if (cellInfo.data.resource_id === 4) {
                            resourceName = cellInfo.data.project && cellInfo.data.project.eshop_type_name ? cellInfo.data.project.eshop_type_name.name : 'Eshop';
                        } else if (cellInfo.data.resource) {
                            resourceName = cellInfo.data.resource.name;
                        }

                        cellElement.html('<a href="' + cellInfo.data.resource_url + '">' + resourceName + '</a>');
                    },
                    dataField: 'resource_id',
                    dataType: 'string',
                    selectedFilterOperation: 'contains'
                },
                {
                    caption: 'Active',
                    dataField: 'active',
                    dataType: 'number'
                },
                {
                    caption: 'TTL',
                    dataField: 'ttl',
                    dataType: 'number'
                },
                {
                    caption: 'Delays',
                    dataField: 'delay_count',
                    dataType: 'number',
                    headerCellTemplate: function (header, info) {
                        $(header).html(info.column.caption).attr('title', 'Delay count');
                    }
                },
                {
                    caption: 'RunTime',
                    dataField: 'runtime',
                    cellTemplate: function (cellElement, cellInfo) {
                        var timeString = '';

                        if (cellInfo.value > 3600) {
                            var hours = Math.floor(cellInfo.value / 3600).toString();
                            cellInfo.value -= hours * 3600;
                            timeString += hours.toString() + ' h ';
                        }

                        if (cellInfo.value > 60) {
                            var minutes = Math.floor(cellInfo.value / 60).toString();
                            cellInfo.value -= minutes * 60;
                            timeString += minutes.toString() + ' min ';
                        }

                        if (cellInfo.value > 0) {
                            timeString += cellInfo.value.toString() + ' s';
                        }

                        cellElement.html(timeString.trim());
                    }
                },
                {
                    caption: 'Step',
                    dataField: 'if_step'
                },
                {
                    caption: 'Created',
                    dataField: 'created_at'
                },
                {
                    caption: 'Unique',
                    dataField: 'unique'
                },
                {
                    caption: 'Diff',
                    dataField: 'control_pool.workload_difficulty',
                    headerCellTemplate: function (header, info) {
                        $(header).html(info.column.caption).attr('title', 'Difficulty');
                    }
                },
                {
                    caption: 'Hostname',
                    dataField: 'hostname'
                },
                {
                    caption: 'Process ID',
                    dataField: 'pid'
                }
            ],
            dataSource: {$baseUrl} + "/open/import-flow/table/active-flows?date_from=" + $(dateFromInput).val() + "&date_to=" + $(dateToInput).val() + "&active=1,2,5",
            filterRow: {
                visible: true
            },
            paging: {
                pageSize: 20
            },
            onRowPrepared: function (info) {
                if (info.rowType === 'data') {
                    if (info.data.active === 1) {
                        info.rowElement.css('background', 'rgba(0, 255, 0, 0.2)');
                    } else if (info.data.active === 2) {
                        info.rowElement.css('background', 'rgba(0, 0, 255, 0.2)');
                    } else if (info.data.active === 3) {
                        info.rowElement.css('background', 'rgba(255, 0, 0, 0.2)');
                    } else if (info.data.active === 5) {
                        info.rowElement.css('background', 'rgba(255, 165, 0, 0.2)');
                    }
                }
            }
        });

        $("#filter_button").click(function (e) {
            e.preventDefault();

            if (!$(dateFromInput).val()) {
                $(dateFromInput).val(dayAgo.toISOString().split('T')[0]);
            }

            if (!$(dateToInput).val()) {
                $(dateToInput).val(now.toISOString().split('T')[0]);
            }

            let actives = [];

            $("input[name=cb_active]:checked").each(function() {
                actives.push($(this).val());
            });

            window.flowsGrid.dxDataGrid('instance').option(
                'dataSource',
                    {$baseUrl} + "/open/import-flow/table/active-flows?date_from=" + $('#af_date_from').val() + "&date_to=" + $('#af_date_to').val() + "&active=" + actives.join(',')
            );
        });
    });
</script>
